name: Docker Image CI

on:
  push:
    branches:
      - "master"

jobs:
  build:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set version from date
        id: set_version
        run: |
          echo "NEW_VERSION=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            maclucky/portfolio:${{ env.NEW_VERSION }}
            maclucky/portfolio:latest
            ghcr.io/mac-lucky/portfolio:${{ env.NEW_VERSION }}
            ghcr.io/mac-lucky/portfolio:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout external repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.API_TOKEN_GITHUB }}
          ref: master
          repository: mac-lucky/kubernetes
          path: kubernetes

      - name: Get latest version tag
        id: get_latest_version
        run: |
          LATEST_TAG=$(curl -s "https://registry.hub.docker.com/v2/repositories/maclucky/portfolio/tags?page_size=100" | jq -r '.results[].name' | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | sort -V | tail -n 1 || echo "")
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV

      - name: Set version
        id: set_version
        run: |
          VERSION=${{ env.LATEST_TAG }}
          if [ -z "$VERSION" ]; then
            NEW_VERSION="1.0.0"
          else
            NEW_VERSION=$(echo $VERSION | awk -F. -v OFS=. '{$NF++;print}')
          fi
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

      - name: Copy file from external repository
        run: |
          mkdir -p .github/manifests
          cp kubernetes/APPS/portfolio-maciek/portfolio-app.yml .github/manifests/portfolio-app.yml

      - name: Update version in manifest
        run: |
          sed -i "s/landing-page.*/landing-page:$NEW_VERSION/g" .github/manifests/portfolio-app.yml

      - name: Update manifest for portfolio
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: ".github/manifests/portfolio-app.yml"
          destination_repo: "mac-lucky/kubernetes"
          destination_folder: "portfolio-maciek"
          user_email: "maciejkedziora98@gmail.com"
          user_name: "mac-lucky"
          destination_branch: "master"
          commit_message: "Update docker image to $NEW_VERSION"